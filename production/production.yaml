version: "3.7"

services:
  manyx:
    image: mrsaemir/manyx
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    volumes:
      - /var/manyx/media/:/manyx/media/
      - /var/manyx/static/:/manyx/static/
    networks:
      - backend-network
    environment:
      # STATIC AND MEDIA ROOT
      - STATIC_ROOT=/var/manyx/static/
      - MEDIA_ROOT=/var/manyx/media/
      # STATIC AND MEDIA URL
      - STATIC_URL=/static/
      - MEDIA_URL=/media/
      # database
      - DB_NAME=manyx_db
      - DB_HOST=manyx_db
      - DB_PORT=5432
      # security
      - MAINTENANCE=False
      - DEBUG_IPS=["debug_ip_here"]
      - ALLOWED_HOSTS=["host_ip_here"]
    depends_on:
      - manyx_db
    command: /usr/bin/gunicorn manyx.wsgi:application -w 2 -b :8000

  manyx_db:
    image: postgres:11.1
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    volumes:
      - /var/manyx/database/:/var/lib/postgresql/data/
    networks:
      - backend-network
    environment:
      - POSTGRES_DB=manyx_db

  manyx_proxy:
    image: nginx:1.15.0-alpine
    ports:
      - "80:8000"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backend-network
    depends_on:
      - manyx


networks:
  backend-network: